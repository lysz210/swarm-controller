version: '3'

services:
  reverse-proxy:
    image: traefik:v2.4
    networks:
      - deploy_net
    command:
      - "--log.level=DEBUG"
      # - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=lingyong.sun@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    # labels:
    #   traefik.enable: "true"
    #   traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
    #   traefik.http.routers.api-n.entrypoints: web
    #   traefik.http.routers.api-n.rule: Host(`traefik.lysz210.name`)
    #   traefik.http.routers.api-n.middlewares: https-redirect@docker
    #   traefik.http.routers.api.entrypoints: websecure
    #   traefik.http.routers.api.rule: Host(`traefik.lysz210.name`)
    #   traefik.http.routers.api.service: api@internal
    #   traefik.http.routers.api.tls.certresolver: letsencrypt
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  swarmpit:
    image: swarmpit/swarmpit:latest
    environment:
      - SWARMPIT_DB=http://db:5984
      - SWARMPIT_INFLUXDB=http://influxdb:8086
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - net
      - deploy_net
    labels:
      traefik.enable: "true"
      traefik.http.routers.swarmpit.entrypoints: web
      traefik.http.routers.swarmpit.rule: Host(`swarm.lysz210.name`)
      traefik.http.routers.swarmpit.middlewares: https-redirect@docker
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      # traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
      traefik.http.services.swarmpit-s.loadbalancer.server.port: 8080
      traefik.http.routers.swarmpit-s.rule: Host(`swarm.lysz210.name`)
      traefik.http.routers.swarmpit-s.entrypoints: websecure
      traefik.http.routers.swarmpit-s.tls.certresolver: letsencrypt
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
      placement:
        constraints:
          - node.role == manager

  db:
    image: couchdb:2.3.0
    volumes:
      - db-data:/opt/couchdb/data
    networks:
      - net
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.15'
          memory: 128M

  influxdb:
    image: influxdb:1.7
    volumes:
      - influx-data:/var/lib/influxdb
    networks:
      - net
    deploy:
      resources:
        limits:
          cpus: '0.60'
          memory: 512M
        reservations:
          cpus: '0.30'
          memory: 128M

  agent:
    image: swarmpit/agent:latest
    environment:
      - DOCKER_API_VERSION=1.35
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - net
    deploy:
      mode: global
      labels:
        swarmpit.agent: 'true'
      resources:
        limits:
          cpus: '0.10'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M

volumes:
  db-data:
    driver: local
  influx-data:
    driver: local

networks:
  net:
    driver: overlay
  deploy_net:
    external: true
