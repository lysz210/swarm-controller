version: "3.7"

services:
  reverse-proxy:
    image: traefik:v2.8
    deploy:
      labels:
        traefik.enable: "true"
        traefik.constraint-label: traefiknet
        traefik.http.middlewares.admin-auth.basicauth.users: ${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}

        # traefik-http set up only to use the middleware to redirect to https
        # Uses the environment variable TRAEFIK_DOMAIN
        traefik.http.routers.traefik-public-http.rule: Host(`traefik.lysz210.name`)
        traefik.http.routers.traefik-public-http.entrypoints: http
        traefik.http.routers.traefik-public-http.middlewares: https-redirect@file
        # traefik-https the actual router using HTTPS
        # Uses the environment variable TRAEFIK_DOMAIN
        traefik.http.routers.traefik-public-https.rule: Host(`${TRAEFIK_DOMAIN?Variable not set}`)
        traefik.http.routers.traefik-public-https.entrypoints: https
        traefik.http.routers.traefik-public-https.service: api@internal
        traefik.http.routers.traefik-public-https.tls: "true"
        # Use the special Traefik service api@internal with the web UI/Dashboard
        traefik.http.routers.api.tls.certresolver: le
        traefik.http.services.traefik-public.loadbalancer.server.port: 8080
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./configs/traefik:/etc/traefik:ro
    networks:
      - traefiknet
